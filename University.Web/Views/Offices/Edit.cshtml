@model University.BL.DTOs.OfficeAssignmentDTO



@using (Html.BeginForm("Edit", "Offices", FormMethod.Post, new { id = "formEditOffice" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.InstructorID)
    <div class="form-horizontal">
        <h4>OfficeAssignmentDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="edit-save" type="button" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script>

    $("#edit-save").click(function () {
        editOffice();
    })

    function editOffice() {

        var formData = $("#formEditOffice").serialize();

        $.post(urlBase + "/Offices/Edit", formData).done(function (data) {
            console.table(data);


            if (data.IsSuccess) {
                swal("Notification", "The process is successful", "success");
                $("#modalOffices").modal("hide");
                getOffices();
            } else {
                swal("Notification", "The process is failed", "error");
            }


        }).fail(function (data) {
            console.table(data);
            swal("Notification", "The process is failed", "error");
        })
    }
</script>